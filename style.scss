////////////////////////////////////////////////////////////////////////////////
// Parameters

$cube-size: 100px;
$half-size: $cube-size / 2;
$colors: white, yellow, blue, green, red, orange;

////////////////////////////////////////////////////////////////////////////////
// General

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    height: 100vh;
    padding: 2rem;
    background: #222;
    font-family: sans-serif;
    color: white;
    line-height: 1.4;
}

////////////////////////////////////////////////////////////////////////////////
// Cube and animation

.cube, .cubelet, .rotation-container {
    transform-style: preserve-3d;
    position: absolute;
}

.cube {
    transform: perspective(1200px) rotateY(45deg) rotate3d(0.707, 0, 0.707, -22.5deg);
    transition: transform .4s;
    left: 50%;
    top: 50%;
}

.face {
    width: $cube-size;
    height: $cube-size;
    position: absolute;
    border: 2px solid black;
}

.rotation-container {
    transition: transform .4s;
}

////////////////////////////////////////////////////////////////////////////////
// Cubelet positioning

@for $x from -1 through 2 {
    @for $y from -1 through 2 {
        @for $z from -1 through 2 {
            .pos_#{$x}_#{$y}_#{$z} {
                transform: translate3d(#{$x * $cube-size}, #{-$y * $cube-size}, #{$z * $cube-size});
            }
        }
    }
}

////////////////////////////////////////////////////////////////////////////////
// Face positioning

.left{
    transform: translateX(-50%) translateY(-50%) rotateY(-90deg) translateZ($half-size);
}

.right{
    transform: translateX(-50%) translateY(-50%) rotateY(90deg) translateZ($half-size);
}

.top{
    transform: translateX(-50%) translateY(-50%) rotateX(90deg) translateZ($half-size) ;

}

.bottom{
    transform: translateX(-50%) translateY(-50%) rotateX(-90deg) translateZ($half-size);

}

.front{
    transform: translateX(-50%) translateY(-50%) translateZ($half-size);

}

.back{
    transform: translateX(-50%) translateY(-50%) translateZ(-$half-size);
}

////////////////////////////////////////////////////////////////////////////////
// Face colors

@each $color in $colors {
    .#{$color} {
        background-color: $color;
    }
}

////////////////////////////////////////////////////////////////////////////////
// Interface

.keycap {
    color: orange;
    border: 1px solid rgba(white, .2);
    background-color: rgba(white, .1);
    padding: 1px 3px;
}

.controls {
    display: flex;
    position: fixed;
    right: 0;
    top: 0;
    bottom: 0;
    align-items: stretch;
    justify-content: center;
    flex-direction: column;
    padding: 0 10vw;

    p {
        color: white;
        font-size: .85rem;
    }
    button {
        padding: 20px;
        background-color: rgba(white, 0);
        color: white;
        border: 1px solid white;
        transition: background-color 300ms;
        cursor: pointer;
        margin: 10px 0;
    
        &:hover {
            background-color: rgba(white, .1);
        }
        &:focus {
            outline: none;
        }
    }
}
